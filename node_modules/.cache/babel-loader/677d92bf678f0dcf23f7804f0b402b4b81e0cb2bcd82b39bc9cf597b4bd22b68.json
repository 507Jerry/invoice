{"ast":null,"code":"/**\r\n * 生成发票编号\r\n * @returns {string} - 格式化的发票编号\r\n */\nexport const generateInvoiceNumber = () => {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = String(today.getMonth() + 1).padStart(2, '0');\n  const day = String(today.getDate()).padStart(2, '0');\n\n  // 从localStorage获取当天的计数器\n  const todayKey = `${year}${month}${day}`;\n  const counter = parseInt(localStorage.getItem(`invoice_counter_${todayKey}`) || '0') + 1;\n\n  // 保存计数器\n  localStorage.setItem(`invoice_counter_${todayKey}`, counter.toString());\n  return `INV-${year}${month}${day}-${String(counter).padStart(3, '0')}`;\n};\n\n/**\r\n * 计算明细行小计\r\n * @param {number} quantity - 数量\r\n * @param {number} unitPrice - 单价\r\n * @returns {number} - 小计金额\r\n */\nexport const calculateLineSubtotal = (quantity, unitPrice) => {\n  return quantity * unitPrice;\n};\n\n/**\r\n * 计算发票总计\r\n * @param {Array} items - 明细数组\r\n * @param {boolean} includeGST - 是否包含GST\r\n * @param {number} gstRate - GST税率\r\n * @returns {object} - 包含小计、GST和总计的对象\r\n */\nexport const calculateInvoiceTotal = (items, includeGST = true, gstRate = 0.1) => {\n  const subtotal = items.reduce((sum, item) => {\n    return sum + calculateLineSubtotal(item.quantity, item.unitPrice);\n  }, 0);\n  if (includeGST) {\n    const gst = subtotal * gstRate;\n    const total = subtotal + gst;\n    return {\n      subtotal,\n      gst,\n      total\n    };\n  } else {\n    return {\n      subtotal: 0,\n      gst: 0,\n      total: subtotal\n    };\n  }\n};\n\n/**\r\n * 格式化货币\r\n * @param {number} amount - 金额\r\n * @returns {string} - 格式化的货币字符串\r\n */\nexport const formatCurrency = amount => {\n  return new Intl.NumberFormat('en-AU', {\n    style: 'currency',\n    currency: 'AUD',\n    minimumFractionDigits: 2\n  }).format(amount);\n};\n\n/**\r\n * 格式化日期\r\n * @param {Date} date - 日期对象\r\n * @returns {string} - 格式化的日期字符串\r\n */\nexport const formatDate = date => {\n  return new Intl.DateTimeFormat('en-AU', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit'\n  }).format(date);\n};\n\n/**\r\n * 获取默认示例数据\r\n * @returns {object} - 默认的发票数据\r\n */\nexport const getDefaultInvoiceData = () => {\n  const today = new Date();\n  const dueDate = new Date(today);\n  dueDate.setDate(today.getDate() + 30);\n};","map":{"version":3,"names":["generateInvoiceNumber","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","todayKey","counter","parseInt","localStorage","getItem","setItem","toString","calculateLineSubtotal","quantity","unitPrice","calculateInvoiceTotal","items","includeGST","gstRate","subtotal","reduce","sum","item","gst","total","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","date","DateTimeFormat","getDefaultInvoiceData","dueDate","setDate"],"sources":["C:/Users/Guest1/invoice01/src/utils/invoiceUtils.js"],"sourcesContent":["/**\r\n * 生成发票编号\r\n * @returns {string} - 格式化的发票编号\r\n */\r\nexport const generateInvoiceNumber = () => {\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  const month = String(today.getMonth() + 1).padStart(2, '0');\r\n  const day = String(today.getDate()).padStart(2, '0');\r\n  \r\n  // 从localStorage获取当天的计数器\r\n  const todayKey = `${year}${month}${day}`;\r\n  const counter = parseInt(localStorage.getItem(`invoice_counter_${todayKey}`) || '0') + 1;\r\n  \r\n  // 保存计数器\r\n  localStorage.setItem(`invoice_counter_${todayKey}`, counter.toString());\r\n  \r\n  return `INV-${year}${month}${day}-${String(counter).padStart(3, '0')}`;\r\n};\r\n\r\n/**\r\n * 计算明细行小计\r\n * @param {number} quantity - 数量\r\n * @param {number} unitPrice - 单价\r\n * @returns {number} - 小计金额\r\n */\r\nexport const calculateLineSubtotal = (quantity, unitPrice) => {\r\n  return quantity * unitPrice;\r\n};\r\n\r\n/**\r\n * 计算发票总计\r\n * @param {Array} items - 明细数组\r\n * @param {boolean} includeGST - 是否包含GST\r\n * @param {number} gstRate - GST税率\r\n * @returns {object} - 包含小计、GST和总计的对象\r\n */\r\nexport const calculateInvoiceTotal = (items, includeGST = true, gstRate = 0.1) => {\r\n  const subtotal = items.reduce((sum, item) => {\r\n    return sum + calculateLineSubtotal(item.quantity, item.unitPrice);\r\n  }, 0);\r\n\r\n  if (includeGST) {\r\n    const gst = subtotal * gstRate;\r\n    const total = subtotal + gst;\r\n    return { subtotal, gst, total };\r\n  } else {\r\n    return { subtotal: 0, gst: 0, total: subtotal };\r\n  }\r\n};\r\n\r\n/**\r\n * 格式化货币\r\n * @param {number} amount - 金额\r\n * @returns {string} - 格式化的货币字符串\r\n */\r\nexport const formatCurrency = (amount) => {\r\n  return new Intl.NumberFormat('en-AU', {\r\n    style: 'currency',\r\n    currency: 'AUD',\r\n    minimumFractionDigits: 2\r\n  }).format(amount);\r\n};\r\n\r\n/**\r\n * 格式化日期\r\n * @param {Date} date - 日期对象\r\n * @returns {string} - 格式化的日期字符串\r\n */\r\nexport const formatDate = (date) => {\r\n  return new Intl.DateTimeFormat('en-AU', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit'\r\n  }).format(date);\r\n};\r\n\r\n/**\r\n * 获取默认示例数据\r\n * @returns {object} - 默认的发票数据\r\n */\r\nexport const getDefaultInvoiceData = () => {\r\n  const today = new Date();\r\n  const dueDate = new Date(today);\r\n  dueDate.setDate(today.getDate() + 30);\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}