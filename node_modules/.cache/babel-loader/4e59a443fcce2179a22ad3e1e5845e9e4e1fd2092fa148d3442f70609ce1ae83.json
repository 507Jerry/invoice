{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n/**\r\n * 响应式媒体查询Hook\r\n * @param {string} query - 媒体查询字符串\r\n * @returns {boolean} - 是否匹配查询条件\r\n */\nexport const useMediaQuery = query => {\n  _s();\n  const [matches, setMatches] = useState(false);\n  useEffect(() => {\n    const media = window.matchMedia(query);\n\n    // 设置初始值\n    setMatches(media.matches);\n\n    // 创建事件监听器\n    const listener = event => {\n      setMatches(event.matches);\n    };\n\n    // 添加事件监听器\n    media.addEventListener('change', listener);\n\n    // 清理函数\n    return () => {\n      media.removeEventListener('change', listener);\n    };\n  }, [query]);\n  return matches;\n};\n\n/**\r\n * 屏幕尺寸检测Hook\r\n * @returns {object} - 包含各种屏幕尺寸状态的对象\r\n */\n_s(useMediaQuery, \"/aV7jSECvYA0Ea4uAEPK2AzROhs=\");\nexport const useScreenSize = () => {\n  _s2();\n  const isLargeScreen = useMediaQuery('(min-width: 1200px)');\n  const isMediumScreen = useMediaQuery('(min-width: 768px) and (max-width: 1199px)');\n  const isSmallScreen = useMediaQuery('(min-width: 480px) and (max-width: 767px)');\n  const isTinyScreen = useMediaQuery('(max-width: 479px)');\n  return {\n    isLargeScreen,\n    isMediumScreen,\n    isSmallScreen,\n    isTinyScreen,\n    isMobile: isSmallScreen || isTinyScreen,\n    isDesktop: isLargeScreen || isMediumScreen\n  };\n};\n_s2(useScreenSize, \"wBHgGKYo+651b4weLApRyXknOlA=\", false, function () {\n  return [useMediaQuery, useMediaQuery, useMediaQuery, useMediaQuery];\n});","map":{"version":3,"names":["useState","useEffect","useMediaQuery","query","_s","matches","setMatches","media","window","matchMedia","listener","event","addEventListener","removeEventListener","useScreenSize","_s2","isLargeScreen","isMediumScreen","isSmallScreen","isTinyScreen","isMobile","isDesktop"],"sources":["C:/Users/Guest1/invoice01/src/hooks/useMediaQuery.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * 响应式媒体查询Hook\r\n * @param {string} query - 媒体查询字符串\r\n * @returns {boolean} - 是否匹配查询条件\r\n */\r\nexport const useMediaQuery = (query) => {\r\n  const [matches, setMatches] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const media = window.matchMedia(query);\r\n    \r\n    // 设置初始值\r\n    setMatches(media.matches);\r\n\r\n    // 创建事件监听器\r\n    const listener = (event) => {\r\n      setMatches(event.matches);\r\n    };\r\n\r\n    // 添加事件监听器\r\n    media.addEventListener('change', listener);\r\n\r\n    // 清理函数\r\n    return () => {\r\n      media.removeEventListener('change', listener);\r\n    };\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\n/**\r\n * 屏幕尺寸检测Hook\r\n * @returns {object} - 包含各种屏幕尺寸状态的对象\r\n */\r\nexport const useScreenSize = () => {\r\n  const isLargeScreen = useMediaQuery('(min-width: 1200px)');\r\n  const isMediumScreen = useMediaQuery('(min-width: 768px) and (max-width: 1199px)');\r\n  const isSmallScreen = useMediaQuery('(min-width: 480px) and (max-width: 767px)');\r\n  const isTinyScreen = useMediaQuery('(max-width: 479px)');\r\n\r\n  return {\r\n    isLargeScreen,\r\n    isMediumScreen,\r\n    isSmallScreen,\r\n    isTinyScreen,\r\n    isMobile: isSmallScreen || isTinyScreen,\r\n    isDesktop: isLargeScreen || isMediumScreen\r\n  };\r\n}; "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMM,KAAK,GAAGC,MAAM,CAACC,UAAU,CAACN,KAAK,CAAC;;IAEtC;IACAG,UAAU,CAACC,KAAK,CAACF,OAAO,CAAC;;IAEzB;IACA,MAAMK,QAAQ,GAAIC,KAAK,IAAK;MAC1BL,UAAU,CAACK,KAAK,CAACN,OAAO,CAAC;IAC3B,CAAC;;IAED;IACAE,KAAK,CAACK,gBAAgB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;;IAE1C;IACA,OAAO,MAAM;MACXH,KAAK,CAACM,mBAAmB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;IAC/C,CAAC;EACH,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,OAAOE,OAAO;AAChB,CAAC;;AAED;AACA;AACA;AACA;AAHAD,EAAA,CA1BaF,aAAa;AA8B1B,OAAO,MAAMY,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,MAAMC,aAAa,GAAGd,aAAa,CAAC,qBAAqB,CAAC;EAC1D,MAAMe,cAAc,GAAGf,aAAa,CAAC,4CAA4C,CAAC;EAClF,MAAMgB,aAAa,GAAGhB,aAAa,CAAC,2CAA2C,CAAC;EAChF,MAAMiB,YAAY,GAAGjB,aAAa,CAAC,oBAAoB,CAAC;EAExD,OAAO;IACLc,aAAa;IACbC,cAAc;IACdC,aAAa;IACbC,YAAY;IACZC,QAAQ,EAAEF,aAAa,IAAIC,YAAY;IACvCE,SAAS,EAAEL,aAAa,IAAIC;EAC9B,CAAC;AACH,CAAC;AAACF,GAAA,CAdWD,aAAa;EAAA,QACFZ,aAAa,EACZA,aAAa,EACdA,aAAa,EACdA,aAAa;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}